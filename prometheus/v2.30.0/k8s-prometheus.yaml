# 默认metrics_path: '/metrics'
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: kube-ops
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      scrape_timeout: 15s
    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alertmanager.jason.com # 这里修改为 alertmanagers 的地址
    rule_files:
      - "/prometheus/conf/rule*.yml"
    scrape_configs:
    - job_name: 'prometheus'
      static_configs:
      - targets: ['prometheus.jason.com']
    - job_name: 'docker'
      static_configs:
      - targets: ['192.168.31.122:9100']  ## 目标主机
    - job_name: 'kubernetes-cadvisor'
      metrics_path: '/metrics/cadvisor'
      static_configs:
      - targets: ['jason.com:10255']
    - job_name: 'kubernetes-nodes-exporters'
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - source_labels: [__address__]
        regex: '(.*):10250'
        replacement: '${1}:9100'
        target_label: __address__
        action: replace

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: kube-ops

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - services
  - endpoints
  - pods
  - nodes/proxy
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - nodes/metrics
  verbs:
  - get
- nonResourceURLs:
  - /metrics
  verbs:
  - get

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: kube-ops

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: kube-ops
  labels:
    app: prometheus
spec:
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      nodeSelector: 
        role: master
      serviceAccountName: prometheus
      # affinity:         #亲和性的调度设置
      #   nodeAffinity:   #策略为节点亲和性
      #     requiredDuringSchedulingIgnoredDuringExecution:      #亲和性的硬策略
      #       nodeSelectorTerms:   #这里不再使用nodeselector，使用这个参数可以进行相对简单的逻辑运算
      #       - matchExpressions:     #匹配表达式
      #         - key: kubernetes.io/hostname      #具体匹配规则(可以通过kubectl get node --show-labels找到相应规则)
      #           operator: In  #不在，简单的来说就是不在k8s-04节点
      #           values:
      #           - prod-k8s-n006
      containers:
      - image: prom/prometheus:v2.30.0
        name: prometheus
        command:
        - "/bin/prometheus"
        args:
        - "--config.file=/etc/prometheus/prometheus.yml"
        - "--storage.tsdb.path=/prometheus"
        - "--storage.tsdb.retention=14d"
        #- "--storage.tsdb.retention=24h"
        - "--web.enable-admin-api"  # 控制对admin HTTP API的访问，其中包括删除时间序列等功能
        - "--web.enable-lifecycle"  # 支持热更新，直接执行localhost:9090/-/reload立即生效
        ports:
        - containerPort: 9090
          protocol: TCP
          name: http
        livenessProbe:
          tcpSocket:
            port: 9090
          initialDelaySeconds: 20
          periodSeconds: 3

        readinessProbe:
          tcpSocket:
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: data
          mountPath: /prometheus
        - name: config-volume
          mountPath: "/etc/prometheus"
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 100m
            memory: 512Mi
      securityContext:
        runAsUser: 0
      volumes:
      - name: data
        hostPath:
      # 宿主上目录位置
          path: /opt/docker_data/prometheus
          type: DirectoryOrCreate
      - name: config-volume
        configMap:
          name: prometheus-config
        
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: kube-ops
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - name: prometheus
    port: 80
    protocol: TCP
    targetPort: http

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
# 通过添加下面的annotations 来开启白名单
# 关闭80强制跳转443 为ingress配置增加注解（annotations）：nginx.ingress.kubernetes.io/ssl-redirect: 'false' 就可以禁止http强制跳转至https
  annotations:
    #nginx.ingress.kubernetes.io/whitelist-source-range: "60.191.70.64/29, xx.xxx.0.0/16"
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
  name: prometheus
  namespace: kube-ops
spec:
  rules:
    - host: prometheus.jason.com
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: prometheus
              port: 
                number: 80

